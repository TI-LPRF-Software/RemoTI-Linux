// Don't forget that in order to access WitBe Artifactory you need to setup
// your default user/password in your ~/.gradle/gradle.properties file
// you can also have a copy of the gradle.properties file in the current directory.

// Project Settings / Configuration.
project.ext.cmake_dest_dir = "${project.buildDir}/out.cmake"
project.ext.cmake_install_prefix = '/usr/'
project.ext.cmake_install_path = "${project.ext.cmake_dest_dir}${project.ext.cmake_install_prefix}"
project.ext.cmake_artifact_path = "${project.buildDir}/artifacts"
project.ext.cmake_artifact_dir = new File(cmake_artifact_path)
project.ext.cmake_artifact_dir.mkdirs()
project.ext.group = group
project.ext.version = version
project.ext.architecture = standardArchitecture()

// Build Scripts Plugin Repositories&Dependencies
buildscript {
  repositories {
    maven {
      url 'http://192.168.250.126:8081/artifactory/plugins-release'
      credentials {
        username = "${artifactory_user}"
        password = "${artifactory_password}"
      }
    }
  }

  dependencies {
    classpath group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '3.0.1'
    classpath group: 'org.ysb33r.gradle', name: 'gnumake', version: '0.1'
  }
}

// Import Plugin Class Dependency
import org.ysb33r.gradle.gnumake.GnuMakeBuild

// Load/Apply Plugins
apply plugin: 'com.jfrog.artifactory'


def standardArchitecture() {
    def arch = System.getProperty('os.arch');
    if (arch == 'amd64')
        return "x86_64";
    return arch;
}

task configure(type: Exec) {
    workingDir(buildDir)
    executable 'cmake'
    args '..', "-DCMAKE_INSTALL_PREFIX=${cmake_install_prefix}", "-DVERSION=${version}"
}

task build(type: GnuMakeBuild) {
    dependsOn 'configure'
    workingDir = "$buildDir"
    targets = []
}

task install(type: GnuMakeBuild) {
    dependsOn 'build'
    targets = ['install']
    flags = [ DESTDIR : cmake_dest_dir]
    workingDir = "$buildDir"
}

task packages(type: GnuMakeBuild) {
    dependsOn 'install'
    targets = ['package']
    flags = [ DESTDIR : cmake_dest_dir]
    workingDir = "$buildDir"
}

task artifactsTar(type: Tar) {
    dependsOn packages
    baseName "${project.name}-${project.version}-${project.architecture}"
    compression Compression.GZIP
    from "${cmake_install_path}", {
        include 'lib/**'
        include 'include/**'
    }
}

task artifacts(dependsOn: artifactsTar) {
    println "${name}"
    println "${group}"
    println "${version}"
}

// publishing {
//     publications {
//         project(MavenPublication) {
//             groupId "${groupId}"
//             artifact artifactsTar
//         }
//     }
// }

// Artifactory Plugin Configuration (custom artifactory DSL)
artifactory {
  contextUrl = "http://192.168.250.126:8081/artifactory"

  publish {
    repository {
            repoKey = 'libs-release-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
    }
  }

  resolve {
    repository {
            repoKey = 'libs-release'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
    }
  }
}