// Don't forget that in order to access WitBe Artifactory you need to setup
// your default user/password in your ~/.gradle/gradle.properties file
// you can also have a copy of the gradle.properties file in the current directory.

// Build Scripts Plugin Repositories&Dependencies
buildscript {
    repositories {
        maven {
            url 'http://192.168.250.126:8081/artifactory/plugins-release'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
    dependencies {
        classpath group: 'org.ysb33r.gradle', name: 'gnumake', version: '0.1'
    }
}

plugins {
    id "com.jfrog.artifactory" version "3.0.1"
}

// Load/Apply Plugins
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

// Import Plugin Class Dependency
import org.ysb33r.gradle.gnumake.GnuMakeBuild

// Project Settings / Configuration.
allprojects {
    group = "net.witbe.qoe.rf4ce"
    version = currentVersion
    ext.destDir = "${buildDir}/out"
    ext.installPrefix = '/usr/'
    ext.installPath = "${destDir}${installPrefix}"
    ext.artifactPath = "${buildDir}/artifacts"
    ext.artifactDir = new File(artifactPath)
    ext.artifactDir.mkdirs()
    ext.architecture = standardArchitecture()
    ext.nbCore = Runtime.runtime.availableProcessors() / 2
}

// Tasks
task configure(type: Exec) {
    workingDir(buildDir)
    executable 'cmake'
    args '..', "-DCMAKE_INSTALL_PREFIX=${installPrefix}", "-DVERSION=$version"
}

task build(type: GnuMakeBuild) {
    dependsOn 'configure'
    workingDir = "$buildDir"
    targets = []
}

task install(type: GnuMakeBuild) {
    dependsOn 'build'
    targets = ['install']
    flags = [ DESTDIR : destDir]
    workingDir = "$buildDir"
}

task genPackages(type: GnuMakeBuild) {
    dependsOn 'install'
    targets = ['package']
    flags = [ DESTDIR : destDir]
    workingDir = "$buildDir"
}

task artifactsTar(type: Tar) {
    dependsOn genPackages
    baseName "${project.name}-${project.version}-${project.ext.architecture}"
    destinationDir = artifactDir
    compression Compression.GZIP
    from "${installPath}", {
        include 'lib/**'
        include 'include/**'
    }
}

// Publications
publishing {
  repositories {
    maven {
      name 'libs-release'
      url 'http://192.168.250.126:8081/artifactory/libs-release-local'
      credentials {
        username = "${artifactory_user}"
        password = "${artifactory_password}"
      }
    }
    maven {
      name 'yum-release'
      url 'http://192.168.250.126:8081/artifactory/yum-release-local'
      credentials {
        username = "${artifactory_user}"
        password = "${artifactory_password}"
      }
    }
  }

  publications {
    buildDependency(MavenPublication) {
      artifactId "remoti"
      groupId = "net.witbe.qoe.rf4ce"

      artifact artifactsTar
      ext.repoName = 'libs-release'
    }

    remotiServer(MavenPublication) {
      artifactId "remoti-server"
      groupId "7.os.x86_64"

      artifact "${buildDir}/remoti-dev-x86_64-server.rpm"
      ext.repoName = 'yum-release'
    }
  }
}

//
// Utility Parts of the Scripts, with tools, Extra functions or hack.

// Help maven-publish to publish different publication on different repos
afterEvaluate {
  tasks.withType(PublishToMavenRepository).all { Ptask ->
    Ptask.onlyIf { task ->
      if (task.publication.hasProperty('repoName') && task.publication.repoName != task.repository.name) {
        task.enabled = false
        task.group = null
        return false
      }
      return true
    }
  }
}

// Utility Methods
def standardArchitecture() {
    def arch = System.getProperty('os.arch');
    return (arch == 'amd64') ? "x86_64" : arch;
}

// Artifactory Plugin Configuration (custom artifactory DSL)
// artifactory {
//     contextUrl = "http://192.168.250.126:8081/artifactory"
//     publish {
//         repository {
//             repoKey = 'libs-release-local'
//             username = "${artifactory_user}"
//             password = "${artifactory_password}"
//             maven = true
//         }
//         defaults {
//             publications ('cmakeProject')
//             publishBuildInfo = true
//             publishPom = false
//         }
//     }
//   resolve {
//         repository {
//             repoKey = 'libs-release'
//             username = "${artifactory_user}"
//             password = "${artifactory_password}"
//             maven = true
//         }
//     }
// }
